<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Filer.Dictionaries">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Dictionaries/ColorDictionary.xaml"/>
        <ResourceDictionary Source="/Dictionaries/IconDictionary.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="SearchResult_FileBrush" Color="{StaticResource Light_SearchResult_FileColor}"/>
    <SolidColorBrush x:Key="SearchResult_PathBrush" Color="{StaticResource Light_SearchResult_PathColor}"/>
    <SolidColorBrush x:Key="SearchResult_DirectoryBrush" Color="{StaticResource Light_SearchResult_DirectoryColor}"/>

    <SolidColorBrush x:Key="Settings_DirAddButtonBrush" Color="{StaticResource Light_Settings_DirAddButtonColor}"/>
    <SolidColorBrush x:Key="Settings_DirAddButtonForeBrush" Color="{StaticResource Light_Settings_DirAddButtonForeColor}"/>
    <SolidColorBrush x:Key="Settings_DirRemoveButtonBrush" Color="{StaticResource Light_Settings_DirRemoveButtonColor}"/>
    <SolidColorBrush x:Key="Settings_DirRemoveButtonForeBrush" Color="{StaticResource Light_Settings_DirRemoveButtonForeColor}"/>
    <SolidColorBrush x:Key="Settings_DirScanPendingBrush" Color="{StaticResource Light_Settings_DirScanPendingColor}"/>
    <SolidColorBrush x:Key="Settings_DirScanActiveBrush" Color="{StaticResource Light_Settings_DirScanActiveColor}"/>
    <SolidColorBrush x:Key="Settings_DirScanScanningBrush" Color="{StaticResource Light_Settings_DirScanScanningColor}"/>
    <SolidColorBrush x:Key="Settings_DirScanLockedBrush" Color="{StaticResource Light_Settings_DirScanLockedColor}"/>
    <SolidColorBrush x:Key="Settings_WindowMainBrush" Color="{StaticResource Light_Settings_WindowMainColor}"/>
    <SolidColorBrush x:Key="Settings_WindowTabBrush" Color="{StaticResource Light_Settings_WindowTabColor}"/>
    <SolidColorBrush x:Key="Settings_TextMainBrush" Color="{StaticResource Light_Settings_TextMainColor}"/>
    
    <SolidColorBrush x:Key="Global_ForegroundBrush" Color="{StaticResource Light_Global_ForegroundColor}"/>



    <Style x:Key="SearchResultItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="ListViewItemBorder" Background="Transparent" BorderThickness="1" Focusable="False">
                        <ContentPresenter  Focusable="False"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ListViewItemBorder" Property="Background" Value="#d1edf5"/>
                            <Setter TargetName="ListViewItemBorder" Property="BorderBrush" Value="#d1edf5"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ListViewItemBorder" Property="Background" Value="#8bd8ee"/>
                            <Setter TargetName="ListViewItemBorder" Property="BorderBrush" Value="#8bd8ee"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SearchFilterItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="ListViewItemBorder" Background="Transparent" BorderThickness="0" Focusable="False">
                        <ContentPresenter Focusable="False"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ListViewItemBorder" Property="Background" Value="#d1edf5"/>
                            <Setter TargetName="ListViewItemBorder" Property="BorderBrush" Value="#d1edf5"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ListViewItemBorder" Property="Background" Value="#8bd8ee"/>
                            <Setter TargetName="ListViewItemBorder" Property="BorderBrush" Value="#8bd8ee"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Settings_HeaderStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource Settings_TextMainBrush}" />
        <Setter Property="FontSize" Value="17" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Margin" Value="10 5 10 10" />
    </Style>

    <Style x:Key="Settings_SubHeaderStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource Settings_TextMainBrush}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Margin" Value="15 3 5 3" />
    </Style>

    <Style x:Key="Settings_Text" TargetType="{x:Type TextBlock}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="Black" />
    </Style>

    <Style x:Key="Settings_BaseButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="#8bd8ee" />
        <Setter Property="Content" Value="Scan" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Width" Value="100" />
    </Style>

    <Style x:Key="Settings_RemoveDirectoryButton" TargetType="{x:Type Button}" BasedOn="{StaticResource Settings_BaseButton}">
        <Setter Property="Foreground" Value="{StaticResource Settings_DirRemoveButtonForeBrush}" />
        <Setter Property="Background" Value="{StaticResource Settings_DirRemoveButtonBrush}" />
        <Setter Property="Content" Value="Remove" />
    </Style>

    <Style x:Key="Settings_AddDirectoryButton" TargetType="{x:Type Button}" BasedOn="{StaticResource Settings_BaseButton}">
        <Setter Property="Foreground" Value="{StaticResource Settings_DirAddButtonForeBrush}" />
        <Setter Property="Background" Value="{StaticResource Settings_DirAddButtonBrush}" />
        <Setter Property="Content" Value="Add" />
        <Setter Property="Margin" Value="0 0 5 0" />
    </Style>

    <Style x:Key="Settings_TabItem" TargetType="{x:Type TabItem}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="TabItemGrid" Background="Transparent" Margin="-2 0 0 0">
                        <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="TabItemGrid" Property="Background" Value="{StaticResource Settings_WindowMainBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource Settings_WindowTabBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="TabItemGrid" Property="Background" Value="{StaticResource Settings_WindowMainBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource Settings_WindowTabBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Settings_CheckButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Margin" Value="15 0 15 5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image x:Name="CheckButtonImage" Source="{StaticResource Icon_CheckOff}" Height="{TemplateBinding Height}" VerticalAlignment="Center" RenderTransformOrigin="0.5 0.5"/>
                        <TextBlock Text="{TemplateBinding Tag}" VerticalAlignment="Center" Margin="5 0 0 0" FontSize="{TemplateBinding FontSize}"
                                   FontFamily="{TemplateBinding FontFamily}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckButtonImage" Property="Source" Value="{StaticResource Icon_CheckHover}"/>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckButtonImage" Property="Source" Value="{StaticResource Icon_Check}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="CheckButtonImage" Property="Width" Value="22"/>
                            <Setter TargetName="CheckButtonImage" Property="Height" Value="22"/>
                            <Setter TargetName="CheckButtonImage" Property="Margin" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Settings_ListViewCheckButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource Settings_CheckButton}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image x:Name="CheckButtonImage" Source="{StaticResource Icon_CheckOff}" Height="{TemplateBinding Height}" VerticalAlignment="Center" RenderTransformOrigin="0.5 0.5"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckButtonImage" Property="Source" Value="{StaticResource Icon_CheckHover}"/>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckButtonImage" Property="Source" Value="{StaticResource Icon_Check}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="CheckButtonImage" Property="Width" Value="16"/>
                            <Setter TargetName="CheckButtonImage" Property="Height" Value="16"/>
                            <Setter TargetName="CheckButtonImage" Property="Margin" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>